# First, you will need to get server certificates
# and a private key and put them on the upstream
# server or on each server in the upstream group.
# A certificate can be obtained from a trusted
# certificate authority (CA) or generated using
# an SSL library such as OpenSSL.

# setting http server
stream {
	# defining upstream group
	upstream backend {
		# listing all the servs
		server backend1.example.com:12345;
		server backend2.example.com:12345;
		server backend3.example.com:12345;
	}

	# a virtual server
	server {
		# listen on port 12345
		listen     12345;
		# redirecting requests
		proxy_pass backend;
		# allowing the proxy protocol
		proxy_ssl  on;

		# specify the path to the SSL client certificate
		# required by the upstream server and the
		# certificate’s private key:
		proxy_ssl_certificate         /etc/ssl/certs/backend.crt;
		proxy_ssl_certificate_key     /etc/ssl/certs/backend.key;

		# specify which SSL protocols and ciphers are used:
		proxy_ssl_protocols           TLSv1 TLSv1.1 TLSv1.2;
		proxy_ssl_ciphers             HIGH:!aNULL:!MD5;

		# If you use certificates issued by a CA, also include the
		# proxy_ssl_trusted_certificate directive to name the file
		# containing the trusted CA certificates used to verify the
		# upstream’s security certificates.
		proxy_ssl_trusted_certificate /etc/ssl/certs/trusted_ca_cert.crt;

		# directive to set verification on
		# and set verification depth
		# also set session reuse directive
		# to optimise performance
		proxy_ssl_verify        on;
		proxy_ssl_verify_depth  2;
		proxy_ssl_session_reuse on;
	}
}
