# setting http server
http {
	# logging original ip
	proxy_set_header X-Real-IP       $proxy_protocol_addr;
	proxy_set_header X-Forwarded-For $proxy_protocol_addr;

	# add $proxy_protocol_addr to logging format
	log_format combined '$proxy_protocol_addr - $remote_user [$time_local] '
						'"$request" $status $body_bytes_sent '
						'"$http_referer" "$http_user_agent"';

	# a virtual server
    server {
		# accept PROXY protocol headers,
		# add the proxy_protocol parameter
		# to the listen directive in a server block

		# changeload balancer's ip to client's ip
		real_ip_header proxy_protocol;

		# listening on port 80 and 443
        listen 80   proxy_protocol;
        listen 443  ssl proxy_protocol;

		# setting certificate files for ssl
		ssl_certificate      /etc/nginx/ssl_/public.example.com.pem;
		ssl_certificate_key  /etc/nginx/ssl_/public.example.com.key;

		# for routing requests
		location / {
			# redireting request to a different server in the upstream side
			proxy_pass       http://backend1;

			# forward client original ip to upstream servers
            proxy_set_header Host            $host;
			proxy_set_header X-Real-IP       $proxy_protocol_addr;
			proxy_set_header X-Forwarded-For $proxy_protocol_addr;
		}


    }
}

# setting stream server (tcp/udp)
stream {
	# add $proxy_protocol_addr to logging format
	log_format basic '$proxy_protocol_addr - $remote_user [$time_local] '
					 '$protocol $status $bytes_sent $bytes_received '
					 '$session_time';

    server {
		listen              12345 ssl proxy_protocol;

		ssl_certificate     /etc/nginx/ssl/cert.pem;
		ssl_certificate_key /etc/nginx/ssl/cert.key;

		# accept PROXY protocol headers,
		# add the proxy_protocol parameter
		# to the listen directive in a server block
        listen 12345 proxy_protocol;

		# redireting request to a different server in the upstream side
		proxy_pass          127.0.0.1:12345;
		# telling to use thre proxy protocol
		proxy_protocol      on;
    }
}

