# define number of worker processes
# for performance matching
worker_processes		auto;

http {
	# allow/import mime types
	# allow to server different types of
	# files to be server as different types
	include /etc/nginx/mime.types;

	# a virtual server
	server {
		# server_name
		# defining server name will help in
		# resolving the domain name on lan and
		# we will be able to use domain name resolving
		server_name localhost 127.0.0.1 slenderedman;

		# specify the port to listen on and
		# tell the path of directory where all
		# the files to be served are stored
		listen 8088;
		root /path/to/static/files/directory/that/we/need/to/serve;

		# to redirect but stay on the same page
		# using rewrite
		rewrite ^/path/to/remain/(\w+) /path/to/be/replaced/$1 # $1 is the variable

		# route using root
		location /path {
			# route to this path when get the request specified above
			root /path/to/static/files/directory/that/we/need/to/serve;
		}

		# route using alias, when we are missing the directory to be served
		# and want to hand it over to another path
		location /path {
			# route to this path when get the request specified above
			alias /path/to/static/files/directory/that/we/need/to/serve/a/directory/in/root_path;
		}

		# route using different file names
		location /path {
			# route to this path when get the request specified above
			alias /path/to/static/files/directory/that/we/need/to/serve/a/directory/in/root_path;
			# try to load specified file if not found try to load the main index file,
			# if none of these exist then throw 404 error
			try_files /a/directory/in/root_path/filename_with_extension /index.html = 404;
		}

		# route using regular expression
		# "~*" is used to specify regular expression
		location ~* /path/[0-9] {
			# route to this path when get the request specified above
			alias /path/to/static/files/directory/that/we/need/to/serve/a/directory/in/root_path;
			# try specifies files
			# else throw 404 error
			try_files /index.html =404;
		}

		# route using redirects on same server to different path
		location /path {
			# redirect using the http redirect code "307"
			return 307 /path/to/directory/having/the/files/to/be/server;
		}

		# when we redirect, we go to that page
		# but what is we awnt to stay on the same
		# page but see the redirected page
		#
		# to do this we add something like from line 14 to line 15
	}
}

events {}
